{
  "rules": {
    "prefs": {
      // Prefs are fetched per-user only
      "$uid": {
        // Only user can read/write prefs
        ".read": "$uid === auth.uid",
        ".write": "$uid === auth.uid"
      }
    },

    // Messages table is flat collection of messages
    "messages": {
      // Anybody can read messages
      ".read": "auth != null",
      "$message": {
        // Messages are append/delete only
        ".write": "!data.exists() || !newData.exists()"
      },
      // Improve performance
      ".indexOn": "timestamp"
    },

    // Users table has user-specific info
    "users": {
      // Anybody can read user info
      ".read": "auth != null",

      "$uid": {
        // Anybody can read user info
        ".read": "auth != null",
        // Only users can edit their info
        ".write": "$uid === auth.uid",
        // All users must have sessions present
        ".validate": "newData.hasChildren(['sessions'])"
      }
    },

    "sessions": {
      // Data which is sync'd live
      "$session": {
        // rule for ownership:
        // root.child('sessions/'+$session+'/owner').val() === auth.uid
        // rule for membership:
        // root.child('sessions/'+$session+'/users/'+auth.uid).exists()

        // Session owner is public
        ".read": "auth != null",
        // Sessions collection is append only and editable by the owner
        ".write": "!data.exists() || root.child('sessions/'+$session+'/owner').val() === auth.uid",
        // Sessions must have owner
        // TODO: Look to ensure that sessions don't get orphaned after creation
        ".validate": "newData.hasChildren(['owner', 'name'])",

        // Users collection which grants permission for users
        "users": {
          // Users are public
          ".read": "auth != null",
          // Only owner may add users
          ".write": "root.child('sessions/'+$session+'/owner').val() === auth.uid"
        },
        "revealed": {
          // Users in session may see revealed info
          ".read": "root.child('sessions/'+$session+'/users/'+auth.uid).exists()",
          // Only owner may change revealed info
          ".write": "root.child('sessions/'+$session+'/owner').val() === auth.uid"
        },
        "hidden": {
          // Only owner may read/write hidden session info
          ".write": "root.child('sessions/'+$session+'/owner').val() === auth.uid",
          ".read": "root.child('sessions/'+$session+'/owner').val() === auth.uid"
        },
        "$uid": {
          // Users in session may see user-specific info
          ".read": "root.child('sessions/'+$session+'/users/'+auth.uid).exists()",
          // Owner or specific user may write to their session info
          ".write": "root.child('sessions/'+$session+'/owner').val() === auth.uid || $uid === auth.uid"
        }
      }
    }
  }
}
